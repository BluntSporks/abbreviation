package abbr

import (
	"strings"
)

var Names = map[string]string{
	"abbreviat":            "abbrev",
	"absolut":              "abs",
	"account":              "acc",
	"accumulat":            "accum",
	"accurac":              "acc",
	"accurat":              "acc",
	"actual":               "act",
	"addend":               "adn",
	"address":              "addr",
	"aggregat":             "agg",
	"algebra":              "alg",
	"algorithm":            "algo",
	"ancestor":             "anc",
	"approximat":           "approx",
	"architect":            "arch",
	"argument":             "arg",
	"ascending":            "asc",
	"attribut":             "attr",
	"averag":               "avg",
	"binar":                "bin",
	"binomial":             "bin",
	"boolean":              "bool",
	"buffer":               "buf",
	"calculat":             "calc",
	"calculus":             "calc",
	"calendar":             "cal",
	"capacit":              "cap",
	"capitalization":       "cap",
	"capitaliz":            "cap",
	"ceiling":              "ceil",
	"certificat":           "cert",
	"certif":               "cert",
	"channel":              "chan",
	"character":            "char",
	"coefficient":          "coef",
	"collect":              "coll",
	"column":               "col",
	"combination":          "comb",
	"combin":               "comb",
	"command":              "cmd",
	"compar":               "comp",
	"compensat":            "comp",
	"complex":              "cop",
	"condition":            "cond",
	"configuration":        "conf",
	"configur":             "conf",
	"connect":              "conn",
	"contain":              "cont",
	"context":              "ctx",
	"continuation":         "cont",
	"continu":              "cont",
	"control":              "ctl",
	"conversion":           "conv",
	"convert":              "conv",
	"cosecant":             "csc",
	"cosin":                "cos",
	"cotangent":            "cot",
	"count":                "cnt",
	"current":              "cur",
	"decimal":              "dec",
	"declaration":          "decl",
	"declar":               "decl",
	"decod":                "dec",
	"decrement":            "dec",
	"decrypt":              "dec",
	"defin":                "def",
	"definition":           "def",
	"degre":                "deg",
	"delet":                "del",
	"deletion":             "del",
	"delimiter":            "delim",
	"denominat":            "den",
	"department":           "dept",
	"depend":               "dep",
	"descendant":           "des",
	"descending":           "desc",
	"describ":              "desc",
	"description":          "desc",
	"destination":          "dest",
	"destin":               "dest",
	"determinant":          "det",
	"develop":              "dev",
	"deviat":               "dev",
	"diagonal":             "diag",
	"diameter":             "diam",
	"dictionar":            "dic",
	"differenc":            "diff",
	"dimension":            "dim",
	"direct":               "dir",
	"discriminant":         "disc",
	"distanc":              "dist",
	"distribut":            "dist",
	"divid":                "div",
	"document":             "doc",
	"domain":               "dom",
	"duplicat":             "dupe",
	"element":              "elem",
	"employ":               "empl",
	"encod":                "enc",
	"encrypt":              "enc",
	"entrop":               "ent",
	"enumerat":             "enum",
	"environment":          "env",
	"equivalenc":           "equiv",
	"equivalent":           "equiv",
	"error":                "err",
	"escap":                "esc",
	"estimat":              "est",
	"evaluat":              "eval",
	"except":               "excp",
	"exclud":               "excl",
	"exclusion":            "excl",
	"exclusiveor":          "xor",
	"execut":               "exec",
	"execution":            "exec",
	"expect":               "exp",
	"exponent":             "exp",
	"express":              "expr",
	"extend":               "ext",
	"extension":            "ext",
	"external":             "ext",
	"factorial":            "fact",
	"field":                "fld",
	"figur":                "fig",
	"floating":             "float",
	"format":               "fmt",
	"forward":              "fwd",
	"fraction":             "frac",
	"frequenc":             "freq",
	"frequent":             "freq",
	"function":             "func",
	"general":              "gen",
	"generat":              "gen",
	"generic":              "gen",
	"geometric":            "geom",
	"guarante":             "guar",
	"handl":                "hdl",
	"harmonic":             "har",
	"header":               "hdr",
	"hexadecimal":          "hex",
	"horizontal":           "horiz",
	"identification":       "ident",
	"identifier":           "ident",
	"imaginar":             "imag",
	"immediat":             "imm",
	"implement":            "imp",
	"includ":               "incl",
	"inclusion":            "incl",
	"increment":            "inc",
	"independent":          "indep",
	"indicat":              "ind",
	"indirect":             "ind",
	"information":          "info",
	"initial":              "init",
	"initialization":       "init",
	"insert":               "ins",
	"instanc":              "inst",
	"instantiat":           "inst",
	"instruct":             "inst",
	"integer":              "int",
	"intercept":            "intc",
	"interfac":             "intf",
	"internal":             "int",
	"internationalization": "i18n",
	"invers":               "inv",
	"iterat":               "iter",
	"kurtosis":             "kurt",
	"languag":              "lang",
	"length":               "len",
	"lexicon":              "lex",
	"librar":               "lib",
	"limit":                "lim",
	"linear":               "lin",
	"literal":              "lit",
	"localization":         "l10n",
	"locat":                "loc",
	"logarithm":            "log",
	"lowercas":             "low",
	"mantissa":             "mant",
	"maximum":              "max",
	"median":               "med",
	"medium":               "med",
	"memor":                "mem",
	"messag":               "msg",
	"minimum":              "min",
	"minut":                "min",
	"modif":                "mod",
	"modul":                "mod",
	"modulo":               "mod",
	"multipl":              "multi",
	"mutabl":               "mut",
	"mutat":                "mut",
	"mutualexclusion":      "mutex",
	"natural":              "nat",
	"negat":                "neg",
	"negativ":              "neg",
	"network":              "net",
	"number":               "num",
	"numerat":              "num",
	"object":               "obj",
	"octal":                "oct",
	"operat":               "op",
	"option":               "opt",
	"original":             "orig",
	"originat":             "orig",
	"overflow":             "ovfl",
	"packag":               "pkg",
	"paragraph":            "para",
	"parameter":            "param",
	"parent":               "par",
	"pattern":              "pat",
	"perform":              "perf",
	"perimeter":            "perim",
	"permanent":            "perm",
	"permutat":             "perm",
	"perpendicular":        "perp",
	"phonetic":             "phon",
	"pictur":               "pic",
	"pointer":              "ptr",
	"position":             "pos",
	"positiv":              "pos",
	"possibl":              "poss",
	"precis":               "prec",
	"precision":            "prec",
	"preparation":          "prep",
	"prepar":               "prep",
	"previous":             "prev",
	"primar":               "pri",
	"priorit":              "prio",
	"privat":               "pri",
	"probab":               "prob",
	"procedur":             "proc",
	"process":              "proc",
	"product":              "prod",
	"profil":               "prof",
	"program":              "prog",
	"progress":             "prog",
	"project":              "proj",
	"pronounc":             "pron",
	"pronunciation":        "pron",
	"proportion":           "prop",
	"protocol":             "prot",
	"prototyp":             "proto",
	"punctuat":             "punc",
	"public":               "pub",
	"quadratic":            "quad",
	"quer":                 "qry",
	"quotient":             "quot",
	"random":               "rand",
	"receiv":               "recv",
	"record":               "rec",
	"rectangl":             "rect",
	"recursiv":             "rec",
	"referenc":             "ref",
	"register":             "reg",
	"regular":              "reg",
	"regularexpression":    "regexp",
	"relat":                "rel",
	"relativ":              "rel",
	"remainder":            "rem",
	"repeat":               "rep",
	"repetition":           "rep",
	"replac":               "repl",
	"repositor":            "repo",
	"represent":            "repr",
	"requir":               "req",
	"resourc":              "res",
	"respond":              "resp",
	"respons":              "resp",
	"responsiv":            "resp",
	"result":               "res",
	"return":               "ret",
	"revers":               "rev",
	"sanitization":         "san",
	"sanitiz":              "san",
	"schedul":              "sched",
	"scienc":               "sci",
	"scientific":           "sci",
	"secant":               "sec",
	"second":               "sec",
	"section":              "sec",
	"secur":                "sec",
	"securit":              "sec",
	"segment":              "seg",
	"select":               "sel",
	"sentenc":              "sent",
	"separat":              "sep",
	"sequenc":              "seq",
	"server":               "srv",
	"signal":               "sig",
	"signatur":             "sig",
	"simulat":              "sim",
	"socket":               "sock",
	"sourc":                "src",
	"specif":               "spec",
	"standard":             "std",
	"statement":            "stm",
	"statistic":            "stat",
	"string":               "str",
	"subtract":             "sub",
	"syllab":               "syll",
	"symmetr":              "symm",
	"synchroniz":           "sync",
	"system":               "sys",
	"tabl":                 "tbl",
	"tangent":              "tan",
	"technolog":            "tech",
	"temporar":             "temp",
	"terminal":             "term",
	"terminat":             "term",
	"token":                "tok",
	"transfer":             "xfer",
	"translat":             "xlat",
	"transmit":             "xmit",
	"trigonometr":          "trig",
	"updat":                "upd",
	"uppercas":             "up",
	"utilit":               "util",
	"validat":              "val",
	"valu":                 "val",
	"variabl":              "var",
	"varianc":              "var",
	"vector":               "vec",
	"verif":                "ver",
	"version":              "ver",
	"vertical":             "vert",
	"visibilit":            "vis",
	"visibl":               "vis",
	"volum":                "vol",
	"window":               "win",
}

// LookUp looks up a word to find its short form, if it is known.
// Note: Should lowercase word before passing them to this function.
func LookUp(word string) string {
	for long, short := range Names {
		if strings.Contains(word, long) {
			return short
		}
	}
	return ""
}
